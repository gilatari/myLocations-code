{"version":3,"sources":["Location/Location.js","Category/Category.js","Navbar/Navbar.js","Location/Crud/Read/ReadLocation.js","Location/Crud/Create/CreateLocation.js","Location/Crud/Update/UpdateLocation.js","App.js","serviceWorker.js","index.js"],"names":["Location","props","name","address","coordinates","category","React","Component","Category","Navbar","selectAction","e","action","className","this","location","onClick","deleteLocation","ReadLocation","onSelectLocation","changeLocation","target","value","locations","onChange","map","key","CreateLocation","createLocation","state","selectCategory","onTyping","event","fieldName","setState","onSelectCategory","categories","placeholder","UpdateLocation","updateLocation","App","selectedLocation","newLocation","tempLocationList","push","locationData","splice","actions","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3c3d973e.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Location extends React.Component{\n\n  constructor(props) {\n    super(props);\n      this.name = this.props.name;\n      this.address = this.props.address;\n      this.coordinates = this.props.coordinates;\n      this.category = this.props.category;\n\n\n    // this.state = {name:null, \n    //               address:null, \n    //               coordinates:null, \n    //               category:this.category\n    //             }\n  }\n}\n\n","import React from 'react';\n\nexport default class Category extends React.Component{\n  constructor(props) {\n    super(props);\n    this.name = props.name;\n  }\n}\n\n","import React from 'react';\nimport './Navbar.css';\n\nexport default class Navbar extends React.Component{\n\n  selectAction = (e, action)=>{\n    this.props.selectAction(action);\n  }\n\nrender() {\n    return (\n      <div className=\"navbar\">\n        {(this.props.location)?\n        <div>\n          <div className=\"selectedLocation\">{this.props.location.name}</div>\n          <div className=\"navbar-actions\">\n             <div onClick={(e) => this.selectAction(e, 'new')} className=\"nav-action\">New</div>\n             <div onClick={(e) => this.selectAction(e, 'read')} className=\"nav-action\">Read</div>\n             <div onClick={(e) => this.selectAction(e, 'update')} className=\"nav-action\">Edit</div>\n             <div className=\"nav-action\" onClick={this.props.deleteLocation}>Delete</div>\n          </div>\n        </div>\n         : \n        <div className=\"navbar-actions\">\n            <div onClick={(e) => this.selectAction(e, 'new')} className=\"nav-action\">New</div>\n        </div>\n      }\n      </div>\n    );\n  }\n}\n\n","import React from 'react';\r\n\r\nexport default class ReadLocation extends React.Component{\r\n\r\n  onSelectLocation = (e)=>{\r\n   this.props.changeLocation(e.target.value);\r\n  }\r\n  \r\nrender() {\r\n    return (\r\n      <div className=\"read-location\">\r\n        {(this.props.locations)?\r\n          <div>  \r\n            <h5>Read Location</h5>\r\n            <select onChange={(e)=>this.onSelectLocation(e)} >\r\n              {this.props.locations.map((location, key) =>\r\n                  <option value={key} key={key} > \r\n                      {location.name}\r\n                  </option>\r\n              )};\r\n            </select>\r\n          </div> :null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport './CreateLocation.css';\r\nimport Location from '../../Location';\r\n\r\nexport default class CreateLocation extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {name:'', \r\n                  address:'', \r\n                  coordinates:'', \r\n                  selectCategory:'0' \r\n    };   \r\n  }\r\n\r\n  createLocation = ()=>{\r\n    this.props.createLocation(new Location({\r\n        name:this.state.name, \r\n        address:this.state.address,\r\n        coordinates:this.state.coordinates,\r\n        category:this.state.selectCategory\r\n    }));\r\n  }\r\n\r\n  onTyping = (event,fieldName)=>{\r\n    this.setState({[fieldName]:event.target.value})\r\n  }\r\n\r\n  onSelectCategory = (e)=>{\r\n    this.setState({selectCategory:e.target.value});\r\n   }\r\n  \r\nrender() {\r\n    return (\r\n      <div className=\"create-location\">\r\n        {(this.props.categories)?\r\n          <div>  \r\n            <h5>Create Location</h5>\r\n            <div className=\"fields\">\r\n                <input placeholder=\"Name\" value={this.state.name} onChange={(e)=>{this.onTyping(e,'name')}} />\r\n                <input placeholder=\"Address\" value={this.state.address} onChange={(e)=>{this.onTyping(e,'address')}}/>\r\n                <input placeholder=\"Coordinates\" value={this.state.coordinates} onChange={(e)=>{this.onTyping(e,'coordinates')}}/>\r\n                <select onChange={(e)=>this.onSelectCategory(e)} >\r\n                  {this.props.categories.map((category, key) =>\r\n                      <option value={key} key={key} > \r\n                          {category.props}\r\n                      </option>\r\n                  )};\r\n                </select>\r\n            </div>\r\n            <button onClick={this.createLocation}>Create Location</button>\r\n        </div>:null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport './UpdateLocation.css';\r\n\r\nexport default class UpdateLocation extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {name:props.location.name,\r\n                  address:props.location.address,\r\n                  coordinates:props.location.coordinates,\r\n                  selectCategory:props.location.selectCategory \r\n                };   \r\n  }\r\n\r\n  updateLocation = ()=>{\r\n    this.props.updateLocation(this.state)\r\n  }\r\n  \r\n  onTyping = (event,fieldName)=>{\r\n    this.setState({[fieldName]:event.target.value})\r\n  }\r\n\r\n  onSelectCategory = (e)=>{\r\n    this.setState({selectCategory:e.target.value});\r\n   }\r\n  \r\nrender() {\r\n    return (\r\n      <div className=\"update-location\">\r\n        {(this.props.categories)?\r\n          <div>  \r\n            <h5>Update Location</h5>\r\n            <div className=\"fields\">\r\n                <input placeholder=\"Name\" value={this.state.name} onChange={(e)=>{this.onTyping(e,'name')}} />\r\n                <input placeholder=\"Address\" value={this.state.address} onChange={(e)=>{this.onTyping(e,'address')}}/>\r\n                <input placeholder=\"Coordinates\" value={this.state.coordinates} onChange={(e)=>{this.onTyping(e,'coordinates')}}/>\r\n                <select onChange={(e)=>this.onSelectCategory(e)} >\r\n                    {this.props.categories.map((category, key) =>\r\n                        <option value={key} key={key} > \r\n                            {category.props}\r\n                        </option>\r\n                    )};\r\n                 </select>\r\n            </div>\r\n            <button onClick={this.updateLocation}>Update Location</button>\r\n          </div>\r\n        :null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Location from './Location/Location'\nimport Category from './Category/Category'\n\nimport Navbar from './Navbar/Navbar'\nimport ReadLocation from './Location/Crud/Read/ReadLocation';\nimport CreateLocation from './Location/Crud/Create/CreateLocation';\nimport UpdateLocation from './Location/Crud/Update/UpdateLocation';\n\nexport default class App extends React.Component{\n\n  constructor(props) {\n    super(props);\n    //mock arrays\n    this.categories = [new Category('Software'), new Category('Hardware') ];\n    this.locations = [new Location({name: 'Microsoft Reactor',\n                                    address: 'Dubnov St 7, Tel Aviv-Yafo', \n                                    coordinates: '32.0750512:34.7131201', \n                                    category: this.categories[1]}),\n                      new Location({name: 'Intel',\n                                    address: 'DuHa-Marpe St 10, Jerusalem', \n                                    coordinates: '31.8018424:35.2017174', \n                                    category: this.categories[0]})\n                                  ];\n                                  \n    this.state = {locations: this.locations, \n                  selectedLocation: '0', \n                  categories: this.categories,\n                  action: 'read'};\n  }\n\n  changeLocation = (selectedLocation)=>{\n      this.setState({selectedLocation:selectedLocation});\n  }\n\n  createLocation = (newLocation)=>{\n    var tempLocationList =  this.state.locations;\n    tempLocationList.push(newLocation);\n    this.setState({locations: tempLocationList});\n  }\n\n  updateLocation = (locationData)=>{\n    var tempLocationList = this.state.locations;\n    tempLocationList[this.state.selectedLocation] = locationData;\n    this.setState({locations: tempLocationList});\n  }\n\n  deleteLocation = ()=>{\n    var tempLocationList = this.state.locations;\n    tempLocationList.splice(this.state.selectedLocation, 1)\n    this.setState({locations: tempLocationList});\n  }\n\n  selectAction = (action)=>{\n    this.setState({action:action});\n  }\n  \nrender() {\n\n  const actions = ()=> {\n    switch(this.state.action){\n        case 'new': return <CreateLocation createLocation={this.createLocation} \n                                           categories={this.state.categories} />;\n\n        case 'update': return <UpdateLocation location ={this.state.locations[this.state.selectedLocation]} \n                                              categories={this.state.categories}\n                                              updateLocation = {this.updateLocation} />;\n\n        default: return <ReadLocation locations={this.state.locations} \n                                          selectedLocation={this.state.selectedLocation}\n                                          changeLocation ={this.changeLocation} />;\n      }      \n    }\n  \n    return (\n      <div className=\"app\">\n        <header className=\"app-header\">\n            <Navbar location ={this.state.locations[this.state.selectedLocation]} \n                    deleteLocation = {this.deleteLocation}\n                    selectAction = {this.selectAction}\n              />\n        </header>\n        <div className=\"content\">\n          {actions()}\n        </div>\n      </div>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}